---
import Layout from "../layouts/Layout.astro";
---

<Layout>
    <div class="option">
        <div class="active all-list-container">
            <i class="fa-solid fa-table-list"></i><span>All List<span/>  
        </div>
        <div class="create-container">
            <i class="fa-solid fa-square-plus"></i> <span>Create New<span/>  
        </div>
        <div class="favorite-container">
            <i class="fa-solid fa-heart"></i> <span>Favorite Post<span/>
        </div>
        <div class="search-container">
            <div class="search">
                <i class="fa-solid fa-magnifying-glass"></i>
                <input class="search-input" type="text" placeholder="Enter something">
            </div>
        </div>
    </div>
    <!-- add daily modal -->
    <dialog id="add-modal">
        <form action="" method="post" id="daily-post">
            <div class="title-box">
                <label for="title">Title:</label>
                <input type="text" id="title" name="title" />
            </div>
            <div class="data-box">
                <label for="date">Date:</label>
                <input type="date" id="date" name="date" />
            </div>
            <div class="age-form">
                <label for="age">Age:</label>
                <input
                    type="text"
                    id="age"
                    name="age"
                    placeholder="Enter age"
                />
            </div>
            <div class="des-box">
                <label for="description">Description:</label>
                <input type="text" id="description" name="description" />
            </div>
        <button id="modal-submit-btn" type="submit">Add</button>
        </form>
        <button id="add-modal-close-btn">Close</button>
    </dialog>
    <!--  add daily modal  -->
      <!-- eidte daily modal -->
    <dialog id="edit-modal">
        <form action="" method="put" class="daily-edit">
            <div class="title-box">
                <label for="title">Title:</label>
                <input type="text" id="title" name="title" />
            </div>
            <div class="data-box">
                <label for="date">Date:</label>
                <input type="date" id="date" name="date" />
            </div>
            <div class="age-form">
                <label for="age">Age:</label>
                <input
                    type="text"
                    id="age"
                    name="age"
                    placeholder="Enter age"
                />
            </div>
            <div class="des-box">
                <label for="description">Description:</label>
                <input type="text" id="description" name="description" />
            </div>
        <button id="modal-submit-btn" type="submit">Edite</button>
        </form>
        <button id="edit-modal-close-btn">Close</button>
    </dialog>
    <!--  edite daily modal  -->
    <div class="daily-container">
        
    </div>
</Layout>

<style>
    .day-record {
        background-color:red;
    }
    .option{
        display: flex;
        justify-content: space-evenly;
        padding: 1rem;
    }
    .daily-container {
        display: flex;
    }
    .day-record {
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;
        gap: 5px;
        padding: 1rem;
    }
    form {
        display: flex;
        justify-content: center;
        flex-direction: column;
        gap: 5px;
        padding: 1rem;
    }
    #daily-post {
        display: flex;
        justify-content: center;
    }
    #title,
    #date,
    #years,
    #months,
    #des {
        border: none;
    }
    .img-contanier{
        width: 90%;
    }
    img {
        width: 30rem;
    }
    .day-record {
        border: solid 2px	rgb(255, 239, 213);
    }
    .day-record:hover {
        box-shadow: 10px 5px 5px rgb(255, 239, 213);
    }
    
    .all-list-container, .create-container, .sort-container, .favorite-container{
        display: flex;
        justify-content: center;
        align-items: center;
        color: black;
        background-color: rgb(47, 79, 79);
        width: 200px;
        height:2rem;
        border-radius: 20px 20px 3px 3px;
    }
    .all-list-container:hover, .create-container:hover, .sort-container:hover, .favorite-container:hover{
        background-color: 	rgb(152, 251, 152);
        cursor:pointer;
    }
    i{
        padding:10px;
        color:	rgb(255, 140, 0);
    }
    span{
        color:	rgb(255, 140, 0);
        font-size:1.1rem;
    }
    .daily-option{
        display: flex;
        justify-content:space-evenly;;
        align-items:center;
        width:100%;
    }
    .daily-option i{
        color:rgb(255, 140, 0);
    }

    .active {
        background-color: 	rgb(152, 251, 152);
    }
    .favorite-btn{
        color:red;
        margin: 0;
        padding: 0;
        border: none;
        outline: none;
        background-color: transparent;
        font-size:1.1rem;

    }
    button:hover{
        cursor:pointer;
    }
    .favorite-btn {
    color: red;
}
</style>

<script>
    const container = document.querySelector(".daily-container");
    const allListBtn = document.querySelector('#all-list-container')
    const createrBtn = document.querySelector('#create-container')
    const sortBtn = document.querySelector('#sort-container')
    const addModal = document.querySelector('#add-modal')
    const openAddModal = document.querySelector('.create-container')
    const closeAddModal = document.querySelector('#add-modal-close-btn')
    const editModal = document.querySelector('#edit-modal')
    const openEditModal = document.querySelector('.edite-btn')
    const closeEditModal = document.querySelector('#edit-modal-close-btn')
    const searchInput = document.querySelector('.search-input')

    document.addEventListener("DOMContentLoaded", () => {
        render()
    });

    openAddModal.addEventListener('click',()=>{
        addModal.showModal()
    })
    closeAddModal.addEventListener('click',()=>{
        addModal.close()
    })
    closeEditModal.addEventListener('click',()=>{
        editModal.close()
    })

    //search
    searchInput.addEventListener('input', async(e)=>{
        const input = e.target.value
        let data = await searchContent(input)
        console.log('SEARCHl',data)

        render(data)
    })

    const searchContent = async (query) => {
        const res = await fetch(`http://localhost:4000/daily/search?title=${query}`, {
            method: "get",
            credentials: "include",
        });
        const data = await res.json();

         return data
    };

    const render = async(data)=>{
        if (!data) {
            data = await getContent();
        }

        console.log(data);
        

        //clear all
        container.innerHTML = "";
        //clone
        data.forEach((d: any) => {
            const template = document.createElement('div')
            template.classList.add('day-record')
        template.innerHTML = `
        <a href=/${d.id}>Link</a>
        <form action="" method="post" id="daily-post">
                <div class="title-box">
                    <label for="title">Title:</label>
                    <input type="text" id="title" name="title" />
                </div>
                <div class="data-box">
                    <label for="date">Date:</label>
                    <input type="date" id="date" name="date" />
                </div>
                <div class="age-form">
                    <label for="age">Age:</label>
                    <input
                        type="text"
                        id="age"
                        name="age"
                        placeholder="Enter age"
                    />
                </div>
                <div class="des-box">
                    <label for="description">Description:</label>
                    <input type="text" id="description" name="description" />
                </div>
            </form>
            <div class="daily-option">
                <button class="edite-btn"><i id='edite' class="fa-solid fa-pen-to-square"></i></button>
                <button class="favorite-btn"><i id='favorite' class="fa-solid fa-heart"></i></button>
                <button class="delete-btn"><i id='delete' class="fa-solid fa-trash"></i></button>
            </div>
        `
            template.querySelector("#title").value = d.title || "";
            template.querySelector("#date").value = d.date || "";
            template.querySelector("#age").value = d.age;
            // template.querySelector("#months").value = d.age % 12 || 0;
            template.querySelector("#description").value = d.description || "";

            // create img link
            // const imgContainer = document.createElement("div");
            // imgContainer.classList.add("img-contanier");

            // let imgElem = document.createElement("img");
            // imgElem.src = d.img;
            // imgElem.alt = "daily img";
            // imgElem.style.width = "200px";
            // imgElem.style.height = "auto"
            // imgElem.style.borderRadius = "10px";
            // imgElem.style.marginTop = "10px";

            const deleteBtn = template.querySelector('.delete-btn')
            deleteBtn.addEventListener('click',()=>{
                deleteContent(d.id)
            })
            const editeBtn = template.querySelector('.edite-btn')
            editeBtn.addEventListener('click',()=>{
                const form = document.querySelector(".daily-edit") as HTMLFormElement
                form.querySelector('#title').value = d.title
                form.querySelector('#date').value = d.date
                form.querySelector('#age').value = d.age
                form.querySelector('#description').value = d.description

                editModal.showModal()
                    form.addEventListener("submit",(e) => {
                        e.preventDefault()
                        const formData = new FormData(e.target as HTMLFormElement)
                        const formObject = Object.fromEntries(formData.entries())
                        editContent(d.id,formObject)
                    })
                    
            })
            container.append(template);
        });
    }
    const getContent = async () => {
        const res = await fetch(`http://localhost:4000/daily`, {
            method: "get",
            credentials: "include",
        });
        if (!res.ok) {
            alert(`Server's problem!`);
        }
        const data = await res.json();
         return data
    };

    const deleteContent = async (id) => {
        const res = await fetch(`http://localhost:4000/daily/${id}`, {
            method: "delete",
            credentials: "include",
        });
        if (!res.ok) {
            alert(`Server's problem!`);
        }
        render()
    };

    //edite Content 
    const editContent = async(id, updated)=>{
        const res = await fetch(`http://localhost:4000/daily/${id}`,{
            method:"put",
            credentials: "include",
            headers:{
                "Content-Type":"application/json",
            },
            body:JSON.stringify(updated)
        })
        if(!res.ok){
            alert('Error');
        }
        alert('send')
        editModal.close()
        render()
    }
   
    //add content
    const form = document.querySelector("#daily-post") as HTMLFormElement
    form.addEventListener("submit",async(e) => {
        e.preventDefault()
        const formData = new FormData(e.target as HTMLFormElement)
        const formObject = Object.fromEntries(formData.entries())
        const res = await fetch(`http://localhost:4000/daily`,{
            method:"post",
            credentials: "include",
            headers:{
                "Content-Type":"application/json",
            },
            body:JSON.stringify(formObject)
        })
        if(!res.ok){
            alert('Error');
        }
        alert('send')
        addModal.close()
        render()
    })
    
        
    

</script>
